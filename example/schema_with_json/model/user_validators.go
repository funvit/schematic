// Code generated by schematic, DO NOT EDIT.
//
// Schema file: github.com/funvit/schematic/example/schema_with_json/schema/user.go

package model

import (
	"errors"
	schemagen "github.com/funvit/schematic"
	"github.com/funvit/schematic/example/schema_with_json/schema"
	"github.com/funvit/schematic/field"
	"github.com/funvit/schematic/pkg/scope_error"
)

// region init

var (
	_ = errors.New("dummy")

	userModelFields       map[string]*field.Descriptor       // stores model fields
	userModelFieldsErrors map[string]*scope_error.ScopeError // stores model fields errors
)

func init() {
	// special code.

	m := schema.User{}

	userModelFields = make(map[string]*field.Descriptor, len(m.Fields()))
	for _, v := range m.Fields() {
		userModelFields[v.Descriptor().Name] = v.Descriptor()
	}

	userModelFieldsErrors = make(map[string]*scope_error.ScopeError, len(m.Fields()))
}

// endregion

// region model User validator

// Validate validates model by validators specified in schema.
//
// Returns nil if no validators are defined.
func (m *User) Validate() error {
	return schemagen.ValidateModel(m, userModelFields, userModelFieldsErrors)
}

// endregion
